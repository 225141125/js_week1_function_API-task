API key for OPENWHEATHER::2c323e89010ea783f4407aee8c7ca87e



1)print odd numbers in array?

 anonymous function :
---------------------------
let xyz=function(data)
{
    let temp=[]
    for(var i=0; i < data.length; i++){
        if(data[i]%2===1){
            temp.push(data[i]);
        }
    }
    return temp;
})

ss = function([1,2,3,4,5,6,7])
console.log(ss);

out put:[1,3,5,7]

IIFE:
-------
let xyz = (function(data)
{
    let temp=[]
    for(var i=0; i < data.length; i++){
        if(data[i]%2===1){
            temp.push(data[i]);
        }
    }
    return temp;
})([1,2,3,4,5,6,7,8,9])
console.log(xyz);

output:[1,3,5,7,9];
==========================


2)convert all strings to title caps in a string array?

anonymous function :
---------------------------

 let xyz= function(string) {
      var sentence = string.toLowerCase().split(" ");
      for(var i = 0; i< sentence.length; i++){
         sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1)
      }
   console.log(sentence.join(" "));
   return sentence;
   }
  xyz("hello my name is venkatesh");

output:
Hello My Name Is Venkatesh

IIFE:
--------
 let xyz= (function(string) {
      var sentence = string.toLowerCase().split(" ");
      for(var i = 0; i< sentence.length; i++){
         sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1)
      }
   console.log(sentence.join(" "));
   return sentence;
   })("hello my name is venkatesh");
   
   output:  Hello My Name Is Venkatesh
========================
3)sum of all numbers in array?

 anonymous function :
--------------------------
let a=[23,4,343,64646,23,234,2,24,24,4];

let sum=a.reduce(function(a,b){
    return a+b;
});
console.log(sum);

output:65327

IIFE:
-------
let a=[23,4,343,64646,23,234,2,24,24,4];

let sum=a.reduce(function(a,b){
    return a+b;
});
console.log(sum);
output:65327
==========================
4)Return all the prime numbers in array?

 anonymous function :
--------------------------
const array = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]; 

let xyz=function(num) {
  for (let i = 2; i <= Math.sqrt(num); i++) {
    if (num % i === 0) {
      return false;
    }
  }
  return num > 1;
}

console.log(array.filter(xyz));

output:[ 2, 3, 5, 7, 11, 13, 17, 19, 23 ]

IIFE:
---------
const array = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]; 

let xyz=(function(num) {
  for (let i = 2; i <= Math.sqrt(num); i++) {
    if (num % i === 0) {
      return false;
    }
  }
  return num > 1;
});

console.log(array.filter(xyz));

output:[ 2, 3, 5, 7, 11, 13, 17, 19, 23 ]

=================================
5)Return all the palindromes in an array:

 anonymous function :
--------------------------
const arr = ['carecar', 1344, 12321, 'did', 'cannot',919];
const isPalindrome = el => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPalindrome = function(arr) {
   return arr.filter(el => isPalindrome(el));
};
console.log(findPalindrome(arr));

output:[ 12321, 'did', 919 ]

IIFE:
--------
const arr = ['carecar', 1344, 12321, 'did', 'cannot',919];
const isPalindrome = el => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPalindrome = (function(arr) {
   return arr.filter(el => isPalindrome(el));
});
console.log(findPalindrome(arr));

output:[ 12321, 'did', 919 ]
=====================================

6)Return median of two sorted arrays of same size 
anonymous function :
--------------------------

const arr1=[1,2,3,4];
const arr2=[5,6,7,8];

let bf=function(arr1,arr2){
    const total_array=[...arr1,...arr2].sort((a,b) => a-b);
    let mid_point=Math.floor(total_array.length/2)
   return total_array%2 === 1 ? total_array[mid_point] : (total_array[mid_point-1]+total_array[mid_point])/2
}
console.log(bf(arr1,arr2));

output:4.5;

IIFE:
------
const arr1=[1,2,3,4];
const arr2=[5,6,7,8];

let bf=(function(arr1,arr2){
    const total_array=[...arr1,...arr2].sort((a,b) => a-b);
    let mid_point=Math.floor(total_array.length/2)
   return total_array%2 === 1 ? total_array[mid_point] : (total_array[mid_point-1]+total_array[mid_point])/2
})
console.log(bf(arr1,arr2));

output:4.5;

=====================================================================


7)Remove duplicates in an array?

anonymous function :
--------------------------

let arr= [1,2,3,4,5,5,7,7,8,8,9,9,0];
let new_array=function(data){
    return data.filter((value,index) => data.indexOf(value) === index);
    
}
console.log(new_array(arr));
OUTPUT:
[ 1, 2, 3, 4, 5, 7, 8, 9, 0 ]

IIFE:
------
let arr= [1,2,3,4,5,5,7,7,8,8,9,9,0];
let new_array=(function(data){
    return data.filter((value,index) => data.indexOf(value) === index);
    
})
console.log(new_array(arr));
OUTPUT:
[ 1, 2, 3, 4, 5, 7, 8, 9, 0 ]



===============================
8)Rotate an array by k times and return the rotated array?

anonymous function :
--------------------------
const rotateArray1 = function(nums, k) {

  for (let i = 0; i < k; i++) {
      nums.unshift(nums.pop());
  }

  return nums;
}
output:[5,4,3,2,1]
IIFE:
-------
const rotateArray1 = function(nums, k) {

  for (let i = 0; i < k; i++) {
      nums.unshift(nums.pop());
  }

  return nums;
}
output:[5,4,3,2,1]